version: '3'
services:
  # Web service layer
  nginx:
    container_name: server_nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    volumes:
      - ${APPLICATION}:/var/www/html
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/conf.d
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    links:
      - php
    networks:
      - treinaNetPHP
  # Application service layer
  php:
    container_name: server_php   
    build:
      context: ./php
      args:
        - INSTALL_GD=${PHP_INSTALL_GD}
        - INSTALL_COMPRESSION=${PHP_INSTALL_COMPRESSION}
        - INSTALL_FTP=${PHP_INSTALL_FTP}
        - INSTALL_MBSTRING=${PHP_INSTALL_MBSTRING}
        - INSTALL_MCRYPT=${PHP_INSTALL_MCRYPT}
        - INSTALL_PDO_MYSQL=${PHP_INSTALL_PDO_MYSQL}
        - INSTALL_PDO_POSTGRESQL=${PHP_INSTALL_PDO_POSTGRESQL}
        - INSTALL_MYSQLI=${PHP_INSTALL_MYSQLI}
        - INSTALL_BCMATH=${PHP_INSTALL_BCMATH}
        - INSTALL_OPCACHE=${PHP_INSTALL_OPCACHE}
        - INSTALL_INTL=${PHP_INSTALL_INTL}
        - INSTALL_XDEBUG=${PHP_INSTALL_XDEBUG}
        - INSTALL_TOKENIZER=${PHP_INSTALL_TOKENIZER}
        - INSTALL_JSON_XML=${PHP_INSTALL_JSON_XML}
        - INSTALL_CURL=${PHP_INSTALL_CURL}
        - INSTALL_OPENSSL=${PHP_INSTALL_OPENSSL}
        - INSTALL_COMPOSER=${PHP_INSTALL_COMPOSER}
      dockerfile: Dockerfile
    volumes:
      - ${APPLICATION}:/var/www/html          
    ports:
      - '9000:9000'
    networks:
      - treinaNetPHP

  # # Data persistence service layer
  mysql:
     container_name: server_mysql
     build:
      context: ./mysql
      dockerfile: Dockerfile
     volumes:
       - ${DATABASE_VOLUME}:/var/lib/mysql       
     ports:
       - "${DATABASE_PORT}:3306"
     environment:       
       - MYSQL_DATABASE=${DATABASE_NAME}
       - MYSQL_USER=${DATABASE_USER}
       - MYSQL_PASSWORD=${DATABASE_PASSWORD}
       - MYSQL_ROOT_PASSWORD=${DATABASE_PASSWORD}
     networks:
      - treinaNetPHP
networks:
    treinaNetPHP:
        driver: bridge