version: '3'
services:
  # Web service layer
  # nginx:
  #   image: nginx:1.13
  #   volumes:
  #     - '.:/var/www/html'
  #     - './nginx/nginx.conf:/etc/nginx/nginx.conf'
  #   container_name: server_nginx
  #   ports:
  #     - '80:80'
  #   depends_on:
  #     - php

  # Application service layer
  php:
    build:
      context: ./php
      args:
        - INSTALL_GD=${PHP_FPM_INSTALL_GD}
        - INSTALL_COMPRESSION=${PHP_FPM_INSTALL_COMPRESSION}
        - INSTALL_FTP=${PHP_FPM_INSTALL_FTP}
        - INSTALL_MBSTRING=${PHP_FPM_INSTALL_MBSTRING}
        - INSTALL_MCRYPT=${PHP_FPM_INSTALL_MCRYPT}
        - INSTALL_PDO_MYSQL=${PHP_FPM_INSTALL_PDO_MYSQL}
        - INSTALL_PDO_POSTGRESQL=${PHP_FPM_INSTALL_PDO_POSTGRESQL}
        - INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}
        - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}
        - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
        - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
        - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
        - INSTALL_TOKENIZER=${PHP_FPM_INSTALL_TOKENIZER}
        - INSTALL_JSON_XML=${PHP_FPM_INSTALL_JSON_XML}
        - INSTALL_CURL=${PHP_FPM_INSTALL_CURL}
        - INSTALL_OPENSSL=${PHP_FPM_INSTALL_OPENSSL}
        - INSTALL_COMPOSER=${PHP_FPM_INSTALL_COMPOSER}
      dockerfile: Dockerfile
    volumes:
      - ${APPLICATION}:/var/www/html      
    container_name: server_php
    command: php -S 0.0.0.0:9000 -t public/
    ports:
      - '9000:9000'
    depends_on:
      - mysql

  # # Data persistence service layer
  mysql:
     build:
      context: ./mysql
      dockerfile: Dockerfile
     volumes:
       - ${VOLUME_DATA}:/var/lib/mysql
       - ${VOLUME_DATA}/initial_data:initial_data:/docker-entrypoint-initdb.d
     container_name: server_mysql
     ports:
       - '3306:3306'
     environment:       
       - MYSQL_DATABASE=${DATABASE_NAME}
       - MYSQL_USER=${DATABASE_USER}
       - MYSQL_PASS=${DATABASE_PASSWORD}
