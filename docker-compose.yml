version: '3.8'
services:
  # Web service layer
  nginx:
    container_name: server_nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    volumes:
      - '.:/var/www/html/'
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/conf.d
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    links:
      - php
    networks:
      - phpnet
  # Application service layer
  php:
    container_name: server_php
    build:
      context: ./php
      args:
        - INSTALL_GD=${PHP_FPM_INSTALL_GD}
        - INSTALL_COMPRESSION=${PHP_FPM_INSTALL_COMPRESSION}
        - INSTALL_FTP=${PHP_FPM_INSTALL_FTP}
        - INSTALL_MBSTRING=${PHP_FPM_INSTALL_MBSTRING}
        - INSTALL_MCRYPT=${PHP_FPM_INSTALL_MCRYPT}
        - INSTALL_PDO_MYSQL=${PHP_FPM_INSTALL_PDO_MYSQL}
        - INSTALL_PDO_POSTGRESQL=${PHP_FPM_INSTALL_PDO_POSTGRESQL}
        - INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}
        - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}
        - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
        - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
        - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
        - INSTALL_TOKENIZER=${PHP_FPM_INSTALL_TOKENIZER}
        - INSTALL_JSON_XML=${PHP_FPM_INSTALL_JSON_XML}
        - INSTALL_CURL=${PHP_FPM_INSTALL_CURL}
        - INSTALL_OPENSSL=${PHP_FPM_INSTALL_OPENSSL}
        - INSTALL_COMPOSER=${PHP_FPM_INSTALL_COMPOSER}
      dockerfile: Dockerfile
    volumes:
      - '.:/var/www/html/'
    ports:
      - '9000:9000'
    networks:
      - phpnet

  # # Data persistence service layer
  mysql:
    container_name: server_mysql
    build:
      context: ./mysql
      dockerfile: Dockerfile
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "${DATABASE_PORT}:3306"
    environment:
      - MYSQL_DATABASE=${DATABASE_NAME}
      - MYSQL_USER=${DATABASE_USER}
      - MYSQL_PASSWORD=${DATABASE_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DATABASE_PASSWORD}
    command: mysqld --default-authentication-plugin=caching_sha2_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci #command: --disable-partition-engine-check
    networks:
      - phpnet

  ## Cache
  cache:
    container_name: server_cache
    image: redis
    ports:
      - 6379:6379
    networks:
      - phpnet
    volumes:
      - cache_data:/data    

volumes:
  cache_data:         
    name: ${CACHE_DATABASE_VOLUME_NAME}
    driver: local
    driver_opts:
      o: bind
      type: none
      device: redis/data
  mysql_data:    
    name: ${DATABASE_VOLUME_NAME}
    driver: local
    driver_opts:
      o: bind
      type: none
      device: mysql/data

networks:
  phpnet:
    driver: bridge
